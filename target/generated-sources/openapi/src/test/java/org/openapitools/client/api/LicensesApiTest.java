/*
 * JetBrains Account API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support-int@jetbrains.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AssignLicenseRequest;
import org.openapitools.client.model.ChangeTeamRequest;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.LicenseResponse;
import org.openapitools.client.model.RevokedLicensesResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LicensesApi
 */
@Disabled
public class LicensesApiTest {

    private final LicensesApi api = new LicensesApi();

    /**
     * Assigns a license to a user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignLicenseTest() throws ApiException {
        AssignLicenseRequest assignLicenseRequest = null;
        String xCustomerCode = null;
        api.assignLicense(assignLicenseRequest, xCustomerCode);
        // TODO: test validations
    }

    /**
     * Change team for licenses
     *
     * Changes team for provided licenses. Only licenses that are transferable between teams will be transferred.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeTeamTest() throws ApiException {
        ChangeTeamRequest changeTeamRequest = null;
        String xCustomerCode = null;
        api.changeTeam(changeTeamRequest, xCustomerCode);
        // TODO: test validations
    }

    /**
     * Returns all the licenses of a current customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllForCustomerTest() throws ApiException {
        String xCustomerCode = null;
        String productCode = null;
        Integer page = null;
        Integer perPage = null;
        Boolean assigned = null;
        String assigneeEmail = null;
        List<LicenseResponse> response = api.getAllForCustomer(xCustomerCode, productCode, page, perPage, assigned, assigneeEmail);
        // TODO: test validations
    }

    /**
     * Returns all the licenses of a current team
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllForTeamTest() throws ApiException {
        Integer teamId = null;
        String xCustomerCode = null;
        String productCode = null;
        Integer page = null;
        Integer perPage = null;
        Boolean assigned = null;
        String assigneeEmail = null;
        List<LicenseResponse> response = api.getAllForTeam(teamId, xCustomerCode, productCode, page, perPage, assigned, assigneeEmail);
        // TODO: test validations
    }

    /**
     * Returns a license by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByLicenseIdTest() throws ApiException {
        String licenseId = null;
        String xCustomerCode = null;
        LicenseResponse response = api.getByLicenseId(licenseId, xCustomerCode);
        // TODO: test validations
    }

    /**
     * Revokes a license from a user
     *
     * If licenseId is provided, a single license will be revoked if found. Other parameters are ignored in this case. &lt;br /&gt;If he licenseId is not provided then the licenses will be revoked by the assignee&#39;s email. &lt;br /&gt;In addition to email, productCode might be provided to revoke licenses for specified products only for the defined email. &lt;br /&gt;JetBrains IDE licenses are distributed on a per-user basis and must be statically assigned to developers. Therefore, the revoke operation via the JetBrains Account API is available only 30 days after the license has been assigned. For the automated license distribution you can use the JetBrains License Vault: https://www.jetbrains.com/license-server &lt;br /&gt;If the licenses are being revoked by assignee&#39;s email within 30 days after assignment (for at least 1 assignee&#39;s license found), RECENTLY_ASSIGNED_LICENSE_IS_NOT_AVAILABLE_FOR_REVOKE error will be returned and no licenses will be revoked.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void revokeAssetTest() throws ApiException {
        String xCustomerCode = null;
        String licenseId = null;
        String email = null;
        String productCode = null;
        RevokedLicensesResponse response = api.revokeAsset(xCustomerCode, licenseId, email, productCode);
        // TODO: test validations
    }

}
